# To read doppler data from the Rinex observation file generated by GNSS-SDR
"""
This script processes Doppler data from a RINEX observation file generated by GNSS-SDR. 
It extracts Doppler shift values for multiple satellites and provides functionality to 
visualize the Doppler shift over time for a specific satellite.
Functions:
----------
read_doppler_data(filename):
    Reads Doppler data from a RINEX observation file.
    Parameters:
    -----------
    filename : str
        The path to the RINEX observation file.
    Returns:
    --------
    tuple:
        - doppler : list of lists
            A list containing 32 sublists, each corresponding to a satellite. 
            Each sublist contains the Doppler shift values for that satellite.
        - satellites : list
            A list of satellite IDs present in the data.
        - times : list
            A list of time values (in seconds) corresponding to the Doppler shift values.
Usage:
------
1. Call `read_doppler_data(filename)` with the path to the RINEX observation file to extract Doppler data.
2. Use the returned `doppler`, `satellites`, and `times` to analyze or visualize the data.
3. To visualize the Doppler shift for a specific satellite, ensure the satellite ID is in the `satellites` list, 
   and then plot the corresponding data using matplotlib.
Example:
--------
# Example usage:
filename = '/path/to/your/rinex/file.25O'
doppler, satellites, times = read_doppler_data(filename)
# Plot Doppler shift for a specific satellite
satellite_id = 10
if satellite_id in satellites:
    sat_index = satellites.index(satellite_id)
    plt.plot(times, doppler[satellite_id], label=f'Satellite {satellite_id}')
    plt.xlabel('Time (minutes)')
    plt.ylabel('Doppler Shift')
    plt.title(f'Doppler Shift vs Time for Satellite {satellite_id}')
    plt.legend()
    plt.show()
    print(f'Satellite {satellite_id} not found in the data.")
"""
# doppler variable contains 32 lists for each satellite. Each list has the doppler values for that satellite
# Times variable containts the time in seconds for each doppler value appended

import matplotlib.pyplot as plt

def read_doppler_data(filename):
    with open(filename, 'r') as file:
        for line in file:
            if "END OF HEADER" in line:
                break
        satellites = []
        len_sat = 0
        times = []
        lines = file.readlines()
        doppler = [[] for _ in range(32)]
        counter = 0 # to know which satellite data is being read
        for line in lines:
            line_arr = line.split()
            if len(line_arr) == 8:
                counter = 0
                info = line.split()
                time = float(info[4])*60 + float(info[5])
                times.append(time)
                sv = info[-1].split('G')[1:]
                sv = [int(x) for x in sv]
                len_sat = len(sv)
                if not satellites:
                    for s in sv:
                        satellites.append(s)
                # print(satellites)
            else:
                dpp = float(line.split()[4])
                doppler[satellites[counter]].append(dpp)
                counter+=1
                
        # print(doppler)
    return doppler, satellites, times





# filename = '../GSDR028t57.25O'
# filename = '/home/joel/BTP/GSDR320w53.24O'
# doppler, sat, times = read_doppler_data(filename)

# import matplotlib.pyplot as plt

# satellite_id = 10

# if satellite_id in sat:
#     sat_index = sat.index(satellite_id)
#     plt.plot(times, doppler[satellite_id], label=f'Satellite {satellite_id}')
#     plt.xlabel('Time (minutes)')
#     plt.ylabel('Doppler Shift')
#     plt.title(f'Doppler Shift vs Time for Satellite {satellite_id}')
#     plt.legend()
#     plt.show()
# else:
    # print(f'Satellite {satellite_id} not found in the data.')

